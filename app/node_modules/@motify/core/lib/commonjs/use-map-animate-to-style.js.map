{"version":3,"sources":["use-map-animate-to-style.ts"],"names":["debug","args","isColor","styleKey","includes","isTransform","transforms","animationDelay","key","transition","defaultDelay","delayMs","delay","animationConfig","styleProp","repeatCount","repeatReverse","animationType","type","loop","repeat","config","animation","props","duration","easing","withTiming","withSpring","configKeys","forEach","configKey","styleSpecificConfig","transitionConfigForKey","console","error","PackageName","withDecay","velocity","deceleration","shouldRepeat","useMapAnimateToStyle","animate","animateProp","from","fromProp","transitionProp","exitTransition","exitTransitionProp","state","stylePriority","onDidAnimate","exit","exitProp","animateInitialState","isMounted","isPresent","safeToUnmount","presence","PresenceContext","disableInitialAnimation","initial","custom","reanimatedSafeToUnmount","reanimatedOnDidAnimated","hasExitStyle","Object","keys","length","style","final","transform","variantStyle","__state","value","animateStyle","initialStyle","exitStyle","isExiting","mergedStyles","assign","exitingStyleProps","transformKeys","filter","join","callback","completed","recentValue","attemptedValue","areStylesExiting","values","some","Boolean","getSequenceArray","sequenceKey","sequenceArray","sequence","step","map","stepDelay","stepValue","stepConfig","stepAnimation","stepTransition","inlineStepConfig","sequenceValue","Array","isArray","transformObject","transformKey","transformValue","finalValue","slice","push","innerStyleKey","allowUnMountIfMissingExit"],"mappings":"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","sourcesContent":["import { PresenceContext, usePresence } from 'framer-motion'\nimport { useCallback, useContext, useEffect } from 'react'\nimport type { TransformsStyle } from 'react-native'\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  withDecay,\n  withSpring,\n  withTiming,\n  withDelay,\n  withRepeat,\n  withSequence,\n  runOnJS,\n} from 'react-native-reanimated'\nimport { PackageName } from './constants/package-name'\nimport type {\n  MotiProps,\n  MotiTransition,\n  SequenceItem,\n  Transforms,\n  TransitionConfig,\n} from './types'\n\nconst debug = (...args: any[]) => {\n  'worklet'\n  if (args) {\n    // hi\n  }\n  // console.log('[moti]', ...args)\n}\n\nconst isColor = (styleKey: string) => {\n  'worklet'\n  return [\n    'backgroundColor',\n    'borderBottomColor',\n    'borderColor',\n    'borderEndColor',\n    'borderLeftColor',\n    'borderRightColor',\n    'borderStartColor',\n    'borderTopColor',\n    'color',\n  ].includes(styleKey)\n}\n\nconst isTransform = (styleKey: string) => {\n  'worklet'\n  const transforms: (keyof Transforms)[] = [\n    'perspective',\n    'rotate',\n    'rotateX',\n    'rotateY',\n    'rotateZ',\n    'scale',\n    'scaleX',\n    'scaleY',\n    'translateX',\n    'translateY',\n    'skewX',\n    'skewY',\n  ]\n  return transforms.includes(styleKey as keyof Transforms)\n}\n\nfunction animationDelay<Animate>(\n  key: string,\n  transition: MotiTransition<Animate> | undefined,\n  defaultDelay?: number\n) {\n  'worklet'\n  let delayMs: TransitionConfig['delay'] = defaultDelay\n\n  if ((transition as any)?.[key as keyof Animate]?.delay != null) {\n    delayMs = (transition as any)?.[key as keyof Animate]?.delay\n  } else if (transition?.delay != null) {\n    delayMs = transition.delay\n  }\n\n  return {\n    delayMs,\n  }\n}\n\nfunction animationConfig<Animate>(\n  styleProp: string,\n  transition: MotiTransition<Animate> | undefined\n) {\n  'worklet'\n\n  const key = styleProp\n  let repeatCount = 0\n  let repeatReverse = true\n\n  let animationType: Required<TransitionConfig>['type'] = 'spring'\n  if (isColor(key) || key === 'opacity') animationType = 'timing'\n\n  // say that we're looking at `width`\n  // first, check if we have transition.width.type\n  if ((transition as any)?.[key as keyof Animate]?.type) {\n    animationType = (transition as any)[key]?.type\n  } else if (transition?.type) {\n    // otherwise, fallback to transition.type\n    animationType = transition.type\n  }\n\n  const loop =\n    (transition as any)?.[key as keyof Animate]?.loop ?? transition?.loop\n\n  if (loop != null) {\n    repeatCount = loop ? -1 : 0\n  }\n\n  if ((transition as any)?.[key as keyof Animate]?.repeat != null) {\n    repeatCount = (transition as any)?.[key as keyof Animate]?.repeat\n  } else if (transition?.repeat != null) {\n    repeatCount = transition.repeat\n  }\n\n  if ((transition as any)?.[key as keyof Animate]?.repeatReverse != null) {\n    repeatReverse = (transition as any)?.[key as keyof Animate]?.repeatReverse\n  } else if (transition?.repeatReverse != null) {\n    repeatReverse = transition.repeatReverse\n  }\n\n  debug({ loop, key, repeatCount, animationType })\n\n  let config = {}\n  // so sad, but fix it later :(\n  let animation = (...props: any): any => props\n\n  if (animationType === 'timing') {\n    const duration =\n      ((transition as any)?.[key as keyof Animate] as Animated.WithTimingConfig)\n        ?.duration ?? (transition as Animated.WithTimingConfig)?.duration\n\n    const easing =\n      ((transition as any)?.[key as keyof Animate] as Animated.WithTimingConfig)\n        ?.easing ?? (transition as Animated.WithTimingConfig)?.easing\n\n    if (easing) {\n      config['easing'] = easing\n    }\n    if (duration != null) {\n      config['duration'] = duration\n    }\n    animation = withTiming\n  } else if (animationType === 'spring') {\n    animation = withSpring\n    config = {\n      // solve the missing velocity bug in 2.0.0-rc.0\n      // velocity: 2,\n    } as Animated.WithSpringConfig\n    const configKeys: (keyof Animated.WithSpringConfig)[] = [\n      'damping',\n      'mass',\n      'overshootClamping',\n      'restDisplacementThreshold',\n      'restSpeedThreshold',\n      'stiffness',\n      'velocity',\n    ]\n    configKeys.forEach((configKey) => {\n      'worklet'\n      const styleSpecificConfig = transition?.[key]?.[configKey]\n      const transitionConfigForKey = transition?.[configKey]\n\n      if (styleSpecificConfig != null) {\n        config[configKey] = styleSpecificConfig\n      } else if (transitionConfigForKey != null) {\n        config[configKey] = transitionConfigForKey\n      }\n    })\n  } else if (animationType === 'decay') {\n    // TODO decay doesn't work for now\n    console.error(\n      `[${PackageName}]: You passed transition type: decay, but this isn't working for now. Honestly, not sure why yet. Try passing other transition fields, like clamp, velocity, and deceleration. If that solves it, please open an issue and let me know.`\n    )\n    animation = withDecay\n    config = {\n      velocity: 2,\n      deceleration: 2,\n    }\n    const configKeys: (keyof Animated.WithDecayConfig)[] = [\n      'clamp',\n      'velocity',\n      'deceleration',\n    ]\n    configKeys.forEach((configKey) => {\n      'worklet'\n      // is this necessary ^ don't think so...?\n      const styleSpecificConfig = transition?.[key]?.[configKey]\n      const transitionConfigForKey = transition?.[configKey]\n\n      if (styleSpecificConfig != null) {\n        config[configKey] = styleSpecificConfig\n      } else if (transitionConfigForKey != null) {\n        config[configKey] = transitionConfigForKey\n      }\n    })\n  }\n\n  return {\n    animation,\n    config,\n    repeatReverse,\n    repeatCount,\n    shouldRepeat: !!repeatCount,\n  }\n}\n\nexport default function useMapAnimateToStyle<Animate>({\n  animate: animateProp,\n  from: fromProp = false,\n  transition: transitionProp,\n  exitTransition: exitTransitionProp,\n  delay: defaultDelay,\n  state,\n  stylePriority = 'animate',\n  onDidAnimate,\n  exit: exitProp,\n  animateInitialState = false,\n}: MotiProps<Animate>) {\n  const isMounted = useSharedValue(false)\n  const [isPresent, safeToUnmount] = usePresence()\n  const presence = useContext(PresenceContext)\n\n  const disableInitialAnimation =\n    presence?.initial === false && !animateInitialState\n  const custom = useCallback(() => {\n    'worklet'\n    return presence?.custom\n  }, [presence])\n\n  const reanimatedSafeToUnmount = useCallback(() => {\n    safeToUnmount?.()\n  }, [safeToUnmount])\n\n  const reanimatedOnDidAnimated = useCallback<NonNullable<typeof onDidAnimate>>(\n    (...args) => {\n      onDidAnimate?.(...args)\n    },\n    [onDidAnimate]\n  )\n\n  const hasExitStyle = !!(\n    typeof exitProp === 'function' ||\n    (typeof exitProp === 'object' &&\n      exitProp &&\n      Object.keys(exitProp).length > 0)\n  )\n\n  const style = useAnimatedStyle(() => {\n    const final = {\n      // initializing here fixes reanimated object.__defineProperty bug(?)\n      transform: [] as TransformsStyle['transform'],\n    }\n    const variantStyle: Animate = state?.__state?.value || {}\n\n    let animateStyle: Animate\n\n    if (animateProp && 'value' in animateProp) {\n      animateStyle = (animateProp.value || {}) as Animate\n    } else {\n      animateStyle = (animateProp || {}) as Animate\n    }\n\n    const initialStyle = fromProp || {}\n    let exitStyle = exitProp || {}\n    if (typeof exitStyle === 'function') {\n      exitStyle = exitStyle(custom())\n    }\n\n    const isExiting = !isPresent && hasExitStyle\n\n    let mergedStyles: Animate = {} as Animate\n    if (stylePriority === 'state') {\n      mergedStyles = Object.assign({}, animateStyle, variantStyle)\n    } else {\n      mergedStyles = Object.assign({}, variantStyle, animateStyle)\n    }\n\n    if (\n      !isMounted.value &&\n      !disableInitialAnimation &&\n      Object.keys(initialStyle).length\n    ) {\n      mergedStyles = initialStyle as Animate\n    } else {\n      mergedStyles = Object.assign({}, initialStyle, mergedStyles)\n    }\n\n    if (isExiting && exitStyle) {\n      mergedStyles = Object.assign({}, exitStyle) as any\n    }\n\n    debug('here')\n\n    // reduce doesn't work with spreads/reanimated Objects!\n    // const exitingStyleProps: Record<string, boolean> = Object.keys(\n    //   mergedStyles || {}\n    // ).reduce((obj, styleKey) => ({ ...obj, [styleKey]: true }), {})\n\n    // use forEach instead!\n    const exitingStyleProps: Record<string, boolean> = {}\n    Object.keys(exitStyle || {}).forEach((key) => {\n      exitingStyleProps[key] = true\n    })\n\n    // allow shared values as transitions\n    let transition: MotiTransition<Animate> | undefined\n    if (transitionProp && 'value' in transitionProp) {\n      transition = transitionProp.value\n    } else {\n      transition = transitionProp\n    }\n    if (isExiting && exitTransitionProp) {\n      let exitTransition: MotiTransition<Animate> | undefined\n      if (exitTransitionProp && 'value' in exitTransitionProp) {\n        exitTransition = exitTransitionProp.value\n      } else {\n        exitTransition = exitTransitionProp\n      }\n\n      transition = Object.assign({}, transition, exitTransition)\n    }\n\n    const transformKeys = Object.keys(mergedStyles).filter((key) =>\n      isTransform(key)\n    )\n\n    if (transformKeys.length > 1) {\n      console.error(\n        `[${PackageName}] Multiple inline transforms found. This won't animate properly. Instead, pass these to a transform array: ${transformKeys.join(\n          ', '\n        )}`\n      )\n    }\n\n    Object.keys(mergedStyles).forEach((key) => {\n      // const initialValue = initialStyle[key]\n      const value = mergedStyles[key]\n\n      const {\n        animation,\n        config,\n        shouldRepeat,\n        repeatCount,\n        repeatReverse,\n      } = animationConfig(key, transition)\n\n      const callback: (completed: boolean, value?: any) => void = (\n        completed,\n        recentValue\n      ) => {\n        if (onDidAnimate) {\n          runOnJS(reanimatedOnDidAnimated)(key as any, completed, recentValue, {\n            attemptedValue: value,\n          })\n        }\n        if (isExiting) {\n          exitingStyleProps[key] = false\n          const areStylesExiting = Object.values(exitingStyleProps).some(\n            Boolean\n          )\n          // if this is true, then we've finished our exit animations\n          if (!areStylesExiting) {\n            runOnJS(reanimatedSafeToUnmount)()\n          }\n        }\n      }\n\n      let { delayMs } = animationDelay(key, transition, defaultDelay)\n\n      if (value == null || value === false) {\n        // skip missing values\n        // this is useful if you want to do {opacity: loading && 1}\n        // without this, those values will break I think\n        return\n      }\n\n      const getSequenceArray = (\n        sequenceKey: string,\n        sequenceArray: SequenceItem<any>[]\n      ) => {\n        'worklet'\n        const sequence = sequenceArray\n          .filter((step) => {\n            // remove null, false values to allow for conditional styles\n            if (step && typeof step === 'object') {\n              return step?.value != null && step?.value !== false\n            }\n            return step != null && step !== false\n          })\n          .map((step) => {\n            let stepDelay = delayMs\n            let stepValue = step\n            let stepConfig = Object.assign({}, config)\n            let stepAnimation = animation\n            if (typeof step === 'object') {\n              // not allowed in Reanimated: { delay, value, ...transition } = step\n              const stepTransition = Object.assign({}, step)\n\n              delete stepTransition.delay\n              delete stepTransition.value\n\n              const { config: inlineStepConfig, animation } = animationConfig(\n                sequenceKey,\n                stepTransition\n              )\n\n              stepConfig = Object.assign({}, stepConfig, inlineStepConfig)\n              stepAnimation = animation\n\n              if (step.delay != null) {\n                stepDelay = step.delay\n              }\n              stepValue = step.value\n            }\n\n            const sequenceValue = stepAnimation(stepValue, stepConfig, callback)\n            if (stepDelay != null) {\n              return withDelay(stepDelay, sequenceValue)\n            }\n            return sequenceValue\n          })\n          .filter(Boolean)\n\n        return sequence\n      }\n\n      if (key === 'transform') {\n        if (!Array.isArray(value)) {\n          console.error(\n            `[${PackageName}]: Invalid transform value. Needs to be an array.`\n          )\n        } else {\n          value.forEach((transformObject) => {\n            final['transform'] = final['transform'] || []\n            const transformKey = Object.keys(transformObject)[0]\n            const transformValue = transformObject[transformKey]\n            const transform = {} as any\n\n            if (Array.isArray(transformValue)) {\n              // we have a sequence in this transform...\n              const sequence = getSequenceArray(transformKey, transformValue)\n\n              if (sequence.length) {\n                let finalValue = withSequence(sequence[0], ...sequence.slice(1))\n                if (shouldRepeat) {\n                  finalValue = withRepeat(\n                    finalValue,\n                    repeatCount,\n                    repeatReverse\n                  )\n                }\n                transform[transformKey] = finalValue\n              }\n            } else {\n              if (transition?.[transformKey]?.delay != null) {\n                delayMs = transition?.[transformKey]?.delay\n              }\n\n              let finalValue = animation(transformValue, config, callback)\n              if (shouldRepeat) {\n                finalValue = withRepeat(finalValue, repeatCount, repeatReverse)\n              }\n              if (delayMs != null) {\n                transform[transformKey] = withDelay(delayMs, finalValue)\n              } else {\n                transform[transformKey] = finalValue\n              }\n            }\n\n            if (Object.keys(transform).length) {\n              final['transform'].push(transform)\n            }\n          })\n        }\n      } else if (Array.isArray(value)) {\n        // we have a sequence\n\n        const sequence = getSequenceArray(key, value)\n        let finalValue = withSequence(sequence[0], ...sequence.slice(1))\n        if (shouldRepeat) {\n          finalValue = withRepeat(finalValue, repeatCount, repeatReverse)\n        }\n\n        if (isTransform(key)) {\n          // we have a sequence of transforms\n          final['transform'] = final['transform'] || []\n\n          if (sequence.length) {\n            const transform = {}\n\n            transform[key] = finalValue\n\n            // @ts-expect-error transform had the wrong type\n            final['transform'].push(transform)\n          }\n        } else {\n          // we have a normal sequence of items\n          // shadows not supported\n          if (sequence.length) {\n            final[key] = finalValue\n          }\n        }\n      } else if (isTransform(key)) {\n        final['transform'] = final['transform'] || []\n        // const transformKey = Object.keys(transformProp)[0]\n        // const transformValue = transformProp[transformKey]\n\n        if (transition?.[key]?.delay != null) {\n          delayMs = transition?.[key]?.delay\n        }\n\n        const transform = {}\n        let finalValue = animation(value, config, callback)\n        if (shouldRepeat) {\n          finalValue = withRepeat(finalValue, repeatCount, repeatReverse)\n        }\n        if (delayMs != null) {\n          transform[key] = withDelay(delayMs, finalValue)\n        } else {\n          transform[key] = finalValue\n        }\n\n        // @ts-expect-error transform had the wrong type\n        final['transform'].push(transform)\n      } else if (typeof value === 'object') {\n        // shadows\n        final[key] = {}\n        Object.keys(value || {}).forEach((innerStyleKey) => {\n          let finalValue = animation(value, config, callback)\n\n          if (shouldRepeat) {\n            finalValue = withRepeat(finalValue, repeatCount, repeatReverse)\n          }\n\n          if (delayMs != null) {\n            final[key][innerStyleKey] = withDelay(delayMs, finalValue)\n          } else {\n            final[key][innerStyleKey] = finalValue\n          }\n        })\n      } else {\n        let finalValue = animation(value, config, callback)\n        if (shouldRepeat) {\n          finalValue = withRepeat(finalValue, repeatCount, repeatReverse)\n        }\n\n        if (delayMs != null && typeof delayMs === 'number') {\n          final[key] = withDelay(delayMs, finalValue)\n        } else {\n          final[key] = finalValue\n        }\n      }\n    })\n\n    // TODO\n    // if (!final.transform?.length) {\n    //   delete final.transform\n    // }\n\n    return final\n  })\n\n  useEffect(() => {\n    isMounted.value = true\n  }, [isMounted])\n\n  useEffect(\n    function allowUnMountIfMissingExit() {\n      if (!isPresent && !hasExitStyle) {\n        reanimatedSafeToUnmount()\n      }\n    },\n    [hasExitStyle, isPresent, reanimatedSafeToUnmount]\n  )\n\n  return {\n    style,\n  }\n}\n"]}